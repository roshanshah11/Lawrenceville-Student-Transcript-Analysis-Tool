{"version":3,"file":"static/js/966.54030d0c.chunk.js","mappings":"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","sources":["MultiStudent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error(\"Error caught by ErrorBoundary:\", error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <div className=\"text-red-500\">Something went wrong. Please try again later.</div>;\n        }\n        return this.props.children;\n    }\n}\n\nconst MultiStudent = ({ darkMode }) => {\n    const [files, setFiles] = useState([]);\n    const [processType, setProcessType] = useState(\"individual\");\n    const [results, setResults] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [expandedCards, setExpandedCards] = useState({});\n\n    const handleFileChange = (e) => {\n        setFiles(Array.from(e.target.files));\n        setError(null);\n    };\n\n    const handleProcessTypeChange = (e) => {\n        setProcessType(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setError(null);\n\n        if (files.length === 0) {\n            setError(\"No files selected.\");\n            setLoading(false);\n            return;\n        }\n\n        const formData = new FormData();\n        files.forEach((file) => formData.append(\"files\", file));\n\n        try {\n            let response;\n            if (processType === \"individual\") {\n                response = await axios.post(\"http://localhost:5000/upload-multi-student\", formData, {\n                    headers: { \"Content-Type\": \"multipart/form-data\" },\n                });\n                if (response.status === 200) {\n                    const gradResponse = await axios.get(\"http://localhost:5000/check-graduation\");\n                    setResults(gradResponse.data);\n                } else {\n                    setError(\"Failed to upload files.\");\n                }\n            } else {\n                response = await axios.post(\"http://localhost:5000/upload-multi-student\", formData, {\n                    headers: { \"Content-Type\": \"multipart/form-data\" },\n                });\n                if (response.status === 200) {\n                    const imageResponse = await axios.get(\"http://localhost:5000/chart\", {\n                        responseType: \"blob\",\n                    });\n                    const imageUrl = URL.createObjectURL(imageResponse.data);\n                    setResults(imageUrl);\n                } else {\n                    setError(\"Failed to upload files.\");\n                }\n            }\n        } catch (err) {\n            console.error(\"Error during file processing:\", err);\n            setError(err.response?.data?.error || \"An error occurred while processing files\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const toggleCard = (filename) => {\n        setExpandedCards((prevState) => ({\n            ...prevState,\n            [filename]: !prevState[filename],\n        }));\n    };\n\n    const renderResults = () => {\n        if (!results) return null;\n\n        if (processType === \"individual\") {\n            return (\n                <div className=\"mt-6\">\n                    <h3 className=\"text-xl font-bold mb-4\">Individual Results</h3>\n                    {Object.entries(results).map(([filename, data]) => {\n                        const parts = filename.split(\"_\");\n                        const isExpanded = expandedCards[filename];\n                        const isDataAvailable = data?.graduation_check?.met_all_requirements !== undefined;\n\n                        return (\n                            <div\n                                key={filename}\n                                className={`p-4 rounded-lg shadow-md mb-4 cursor-pointer ${\n                                    darkMode ? \"bg-gray-700 text-white\" : \"bg-white text-gray-800\"\n                                } ${isDataAvailable ? \"hover:bg-gray-50\" : \"opacity-50 cursor-not-allowed\"}`}\n                                onClick={() => isDataAvailable && toggleCard(filename)}\n                            >\n                                <h4 className=\"font-bold\">{parts}</h4>\n                                <div className=\"mt-2\">\n                                    <strong>Graduation Status:</strong>{\" \"}\n                                    {data?.graduation_check?.met_all_requirements !== undefined ? (\n                                        data.graduation_check.met_all_requirements ? (\n                                            <span className=\"text-green-600\">✅ All Requirements Met</span>\n                                        ) : (\n                                            <span className=\"text-red-600\">❌ Some Requirements Not Met</span>\n                                        )\n                                    ) : (\n                                        <span className=\"text-gray-500\">⚠️ Data Unavailable</span>\n                                    )}\n                                </div>\n\n                                {isExpanded && isDataAvailable && (\n                                    <div className=\"mt-4\">\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                            <div>\n                                                <h5 className=\"font-bold mb-2\">Progress</h5>\n                                                <table className=\"w-full\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th className=\"px-4 py-2\">Requirement</th>\n                                                            <th className=\"px-4 py-2\">Status</th>\n                                                            <th className=\"px-4 py-2\">Progress</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {Object.entries(data.graduation_check.progress[\"Student Progress\"]).map(([req, status]) => {\n                                                            const isMet = status.includes(\"✅\");\n                                                            const progressText = status.split(\":\")[1].trim();\n                                                            return (\n                                                                <tr key={req} className={isMet ? \"bg-green-100\" : \"bg-red-100\"}>\n                                                                    <td className=\"border px-4 py-2\">{req}</td>\n                                                                    <td className=\"border px-4 py-2\">{isMet ? \"✅ Met\" : \"❌ Not Met\"}</td>\n                                                                    <td className=\"border px-4 py-2\">{progressText}</td>\n                                                                </tr>\n                                                            );\n                                                        })}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n\n                                            <div>\n                                                <h5 className=\"font-bold mb-2\">Graduation Requirements</h5>\n                                                <table className=\"w-full\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th className=\"px-4 py-2\">Requirement</th>\n                                                            <th className=\"px-4 py-2\">Credits Needed</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {Object.entries(data.graduation_check.requirements[\"Graduation Requirements\"]).map(([req, credits]) => (\n                                                            <tr key={req}>\n                                                                <td className=\"border px-4 py-2\">{req}</td>\n                                                                <td className=\"border px-4 py-2\">{credits}</td>\n                                                            </tr>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"mt-6\">\n                    <h3 className=\"text-xl font-bold mb-4\">Collective Analysis</h3>\n                    {results ? (\n                        <img src={results} alt=\"Visual representation of the collective analysis results\" className=\"w-full rounded-lg shadow-md\" />\n                    ) : (\n                        <p>No data available.</p>\n                    )}\n                </div>\n            );\n        }\n    };\n\n    return (\n        <ErrorBoundary>\n            <div className=\"container mx-auto p-4\">\n                <div className={`p-6 rounded-lg shadow-md ${darkMode ? \"bg-gray-800 text-white\" : \"bg-white text-gray-800\"}`}>\n                    <h2 className=\"text-2xl font-bold mb-4\">Multi-Student Transcript Processing</h2>\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\n                        <div>\n                            <label htmlFor=\"transcript-files\" className=\"block text-sm font-medium text-gray-700\">\n                                Select Transcript Folder:\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"transcript-files\"\n                                webkitdirectory=\"true\"\n                                directory=\"true\"\n                                onChange={handleFileChange}\n                                className=\"mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                            />\n                        </div>\n                        <div className=\"flex gap-4\">\n                            <label className=\"flex items-center gap-2\">\n                                <input\n                                    type=\"radio\"\n                                    value=\"individual\"\n                                    checked={processType === \"individual\"}\n                                    onChange={handleProcessTypeChange}\n                                />\n                                Process Individually\n                            </label>\n                            <label className=\"flex items-center gap-2\">\n                                <input\n                                    type=\"radio\"\n                                    value=\"collective\"\n                                    checked={processType === \"collective\"}\n                                    onChange={handleProcessTypeChange}\n                                />\n                                Process Collectively\n                            </label>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            disabled={files.length === 0 || loading}\n                            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-blue-300\"\n                        >\n                            {loading ? \"Processing...\" : \"Process Files\"}\n                        </button>\n                    </form>\n                    {error && <div className=\"text-red-500 mt-4\">{error}</div>}\n                    {renderResults()}\n                </div>\n            </div>\n        </ErrorBoundary>\n    );\n};\n\nexport default MultiStudent;"],"names":["ErrorBoundary","React","constructor","props","super","this","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","_jsx","className","children","_ref","darkMode","files","setFiles","useState","processType","setProcessType","results","setResults","loading","setLoading","setError","expandedCards","setExpandedCards","handleProcessTypeChange","e","target","value","_jsxs","onSubmit","async","preventDefault","length","formData","FormData","forEach","file","append","response","axios","post","headers","status","gradResponse","get","data","imageResponse","responseType","imageUrl","URL","createObjectURL","err","_err$response","_err$response$data","htmlFor","type","id","webkitdirectory","directory","onChange","Array","from","checked","disabled","Object","entries","map","_ref2","_data$graduation_chec","_data$graduation_chec2","filename","parts","split","isExpanded","isDataAvailable","undefined","graduation_check","met_all_requirements","onClick","prevState","toggleCard","progress","_ref3","req","isMet","includes","progressText","trim","requirements","_ref4","credits","src","alt"],"sourceRoot":""}